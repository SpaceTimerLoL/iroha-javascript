/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_signature_free(a: number): void;
export function signature_new(a: number, b: number, c: number): number;
export function signature_verify(a: number, b: number, c: number): void;
export function signature_signature(a: number, b: number): void;
export function __wbg_algorithm_free(a: number): void;
export function algorithm_bls_normal(): number;
export function algorithm_bls_small(): number;
export function algorithm_secp256k1(): number;
export function algorithm_ed25519(): number;
export function __wbg_keygenconfiguration_free(a: number): void;
export function keygenconfiguration_new(): number;
export function keygenconfiguration_use_seed(a: number, b: number, c: number): number;
export function keygenconfiguration_use_private_key(a: number, b: number): number;
export function keygenconfiguration_with_algorithm(a: number, b: number): number;
export function __wbg_privatekey_free(a: number): void;
export function privatekey_digest_function(a: number, b: number): void;
export function privatekey_payload(a: number, b: number): void;
export function privatekey_from_js_key(a: number): number;
export function publickey_from_multihash(a: number): number;
export function __wbg_keypair_free(a: number): void;
export function keypair_public_key(a: number): number;
export function keypair_private_key(a: number): number;
export function keypair_generate_with_configuration(a: number): number;
export function keypair_from_pair(a: number, b: number): number;
export function __wbg_multihashdigestfunction_free(a: number): void;
export function multihashdigestfunction_ed25519pub(): number;
export function multihashdigestfunction_secp256k1pub(): number;
export function multihashdigestfunction_bls12381g1pub(): number;
export function multihashdigestfunction_bls12381g2pub(): number;
export function multihashdigestfunction_to_string(a: number, b: number): void;
export function multihashdigestfunction_to_u64(a: number, b: number): void;
export function multihashdigestfunction_from_string(a: number, b: number): number;
export function multihashdigestfunction_from_u64(a: number, b: number): number;
export function __wbg_multihash_free(a: number): void;
export function multihash_to_bytes(a: number, b: number): void;
export function multihash_from_bytes(a: number, b: number): number;
export function multihash_from_public_key(a: number): number;
export function multihash_digest_function(a: number): number;
export function multihash_payload(a: number, b: number): void;
export function __wbg_hash_free(a: number): void;
export function hash_new(a: number, b: number): number;
export function hash_bytes(a: number, b: number): void;
export function publickey_payload(a: number, b: number): void;
export function main(): void;
export function signature_public_key(a: number): number;
export function __wbg_publickey_free(a: number): void;
export function publickey_digest_function(a: number, b: number): void;
export function __wbindgen_malloc(a: number): number;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_free(a: number, b: number): void;
export function __wbindgen_realloc(a: number, b: number, c: number): number;
export function __wbindgen_exn_store(a: number): void;
export function __wbindgen_start(): void;
